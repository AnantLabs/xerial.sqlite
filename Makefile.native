# Makefile for the native SQLite JDBC Driver
#
# No auto-goop. Just try typing 'make'. You should get two interesting files:
#     build/TARGET_OS/LIBNAME
#     build/sqlitejdbc-vXXX-native.jar
#
# To combine these, type:
# 	  cd build
# 	  mv LIBNAME linux-x86.lib (or win-x86.lib, freebsd-ppc.lib, mac.lib, etc)
#     java uf sqlitejdbc-vXXX-native.jar linux-x86.lib
#
# The first is the native library, the second is the java support files.
# Generating the more complete sqlitejdbc-vXXX.jar requires building the
# NestedVM source, which requires running a Linux machine, and looking at
# the other make files.
#

include Makefile.common

SRC_FOLDER:=src/main/java/org/sqlite/
WORK:=target/sqlitejdbc
BUILD:=$(WORK)/build

default: test
test: native 
native: $(WORK)/build/$(target)/$(LIBNAME)


$(BUILD)/$(target)/$(LIBNAME): $(BUILD)/$(sqlite)-$(target)/sqlite3.o $(BUILD)/org/sqlite/NativeDB.class src/main/java/org/sqlite/NativeDB.c
	@mkdir -p $(BUILD)/$(target)
	$(JAVAH) -classpath $(BUILD) -jni -o $(BUILD)/NativeDB.h org.sqlite.NativeDB
	$(CC) $(CFLAGS) -c -o $(BUILD)/$(target)/NativeDB.o \
		src/main/java/org/sqlite/NativeDB.c
	$(CC) $(CFLAGS) $(LINKFLAGS) -o $(BUILD)/$(target)/$(LIBNAME) \
		$(BUILD)/$(target)/NativeDB.o $(BUILD)/$(sqlite)-$(target)/*.o 
	$(STRIP) $(BUILD)/$(target)/$(LIBNAME)

$(BUILD)/$(sqlite)-%/sqlite3.o: $(WORK)/dl/$(sqlite)-amal.zip
	@mkdir -p $(BUILD)/$(sqlite)-$*
	@echo "building a native library for os:$(OS_NAME), arch:$(OS_ARCH)"
	unzip -qo $(WORK)/dl/$(sqlite)-amal.zip -d $(BUILD)/$(sqlite)-$*
	perl -pi -e "s/sqlite3_api;/sqlite3_api = 0;/g" \
	    $(BUILD)/$(sqlite)-$*/sqlite3ext.h
# insert a code for loading extension functions
	perl -pi -e "s/^opendb_out:/  if(!db->mallocFailed && rc==SQLITE_OK){ rc = RegisterExtensionFunctions(db); }\nopendb_out:/;" \
	    $(BUILD)/$(sqlite)-$*/sqlite3.c
	cat sqlitejdbc/ext/*.c >> $(BUILD)/$(sqlite)-$*/sqlite3.c
	(cd $(BUILD)/$(sqlite)-$*; $(CC) -o sqlite3.o -c $(CFLAGS) \
	    -DSQLITE_ENABLE_LOAD_EXTENSION \
	    -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT \
	    -DSQLITE_ENABLE_COLUMN_METADATA \
	    -DSQLITE_CORE \
	    -DSQLITE_ENABLE_FTS3 \
	    -DSQLITE_ENABLE_FTS3_PARENTHESIS \
	    -DSQLITE_ENABLE_RTREE \
	    -DSQLITE_ENABLE_STAT2 \
            $(SQLITE_FLAGS) \
	    sqlite3.c)

$(BUILD)/org/sqlite/%.class: src/main/java/org/sqlite/%.java
	@mkdir -p build
	$(JAVAC) -source 1.5 -target 1.5 -sourcepath src/main/java -d $(BUILD) $<

$(WORK)/dl/$(sqlite)-amal.zip:
	@mkdir -p $(WORKDIR)/dl
	curl -o$(WORK)/dl/$(sqlite)-amal.zip \
	http://www.sqlite.org/sqlite-amalgamation-$(subst .,_,$(version)).zip

clean:
	rm -rf build dist







